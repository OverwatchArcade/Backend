name: Main

on:
  push:
    branches:
      - main

env:
  DOTNET_NOLOGO: true

jobs:
  build-and-deploy-main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Setup .NET 5.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
      - name: Cache .NET dependencies
        uses: actions/cache@v2
        with:
          path: '~/.nuget/packages'
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Install dependencies
        run: dotnet restore Src
      - name: Build
        run: dotnet build Src --configuration Release --nologo --no-restore
      - name: Test
        run: dotnet test Tests  /p:CollectCoverage=true /p:CoverletOutputFormat=lcov /p:CoverletOutput=../coverage -c Release --no-build
      - name: CodeClimate coverage report
        uses: paambaati/codeclimate-action@v3.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODECLIMATE_TEST_ID }}
        with:
          coverageLocations: ${{github.workspace}}/coverage.info:lcov
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: "Src"
          push: true
          tags: quintenps/owarcade_backend:latest